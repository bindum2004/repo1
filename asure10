first to maven project
then push taht to git rep





then in azure

STEP4: Now goto Azure Devops Organization create Public 
Project

STEP5: SELECT PIPELINE and then click on create pipeline 
STEP6: After creating Pipeline select type of repo as Github
STEP7: It asks for minimum signin verification after that ur screen be 
as in below select required repository 
STEP9: It again verifies signin verification of microsoft 
account You be able to see starter pipeline select for Maven 

Finally You be able to see tasks running its failed because we should 
mention proper path For pom.xm





trigger:
- main  # Change this if your branch is not 'main'

pool:
  name: Default  # This uses your self-hosted agent

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    goals: 'clean install'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
  displayName: 'Maven Build and Test'





cd /d D:\azure-agent
config.cmd
Now you’ll get prompts. Fill in as follows:

Prompt	What You Type
Enter server URL	https://dev.azure.com/YOUR_ORG_NAME → Replace with your Azure DevOps org URL (e.g., https://dev.azure.com/bindu-org)
Enter authentication type	PAT
Enter personal access token	Paste the PAT you generated from Azure DevOps =======
Enter agent name	Press Enter (or type a name like my-agent)
Enter work folder	Press Enter to accept default (_work)
Do you want to run the agent as a service?	Type Y
Enter user account	Press Enter (defaults to your current Windows login user)






create org
create new project public


profile
pat
new token 
scopes red nad manage nad read execute {build agent pools}
create na dcopy that


azure devops org  org setting agent pools default new agent download file new flilder extract all copy path change 


cmd

pipeline
create 
new git maven 
code paste





